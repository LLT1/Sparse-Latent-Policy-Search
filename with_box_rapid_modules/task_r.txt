MODULE Module1
    CONST robtarget Target_10:=[[376.49496786,-141.821277955,218.418638282],[1,0,0,0],[1,0,2,4],[-101.964427132,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget Target_20:=[[376.5,-141.8,410.137918981],[1,0,0,0],[1,0,2,4],[-101.964433706,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget move_away:=[[376.49496786,-211.821277955,218.418638282],[1,0,0,0],[1,0,2,4],[-101.964427132,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    VAR robtarget another_target;
    VAR jointtarget jointpos1;
    VAR jointtarget jointpos2;
    VAR jointtarget current_joints;
    VAR jointtarget current_joints2;
    VAR jointtarget sum_of_joints;
    VAR jointtarget all_targets{10};
    VAR num i;
    
    PROC main()
        
        !MotionSup \Off;
        !WHILE TRUE DO
        !   Learning_Right_Hand;
        !ENDWHILE
        MotionSup \Off;
        Executing_Right_Hand;
    ENDPROC
    
    PROC Executing_Right_Hand()

        VAR socketdev server;
        VAR socketdev client;
        
        VAR string message1;
        VAR string message2;
        VAR string message3;
        VAR string message4;
        VAR string message5;
        VAR string message6;
        VAR string message7;
        
        VAR bool ok;
        
        VAR num val1;
        VAR num val2;
        VAR num val3;
        VAR num val4;
        VAR num val5;
        VAR num val6;
        VAR num val7;
        
        VAR rawbytes data;
        VAR robtarget end_location;
        
        current_joints :=CalcJointT(Target_10, tool0 \WObj:=wobj0);
        MoveAbsJ current_joints, v50, z10, tool0 \WObj:=wobj0;
        
        !current_joints :=CalcJointT(move_away, tool0 \WObj:=wobj0);
        !MoveAbsJ current_joints, v50, z10, tool0 \WObj:=wobj0;
        
        
        i:=0;
         
        SocketCreate server;
        !SocketBind server,"192.168.125.1",44000;
        SocketBind server,"127.0.0.1",44000;
        SocketListen server;
        begin_again:
        SocketAccept server,client;
        SocketSend client,\Str:="Hello Client!";
        
         WHILE SocketGetStatus(client) <> SOCKET_CLOSED DO
           
            !Receive a message from client
            SocketReceive client,\Str:=message1;
            SocketSend client,\Str:="Confirmation from Left H";
            
            ok:= StrToVal(message1,val1);
            
            IF val1 = 3333 THEN
                SocketClose client;
                GOTO execute_all;
            ENDIF
            
            IF val1 = 9999 THEN
                SocketClose client;
                GOTO begin_again;
            ENDIF
            
            SocketReceive client,\Str:=message2;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message3;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message4;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message5;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message6;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message7;
            SocketSend client,\Str:="Confirmation from Left H";
            
            ok:= StrToVal(message1,val1);
            ok:= StrToVal(message2,val2);
            ok:= StrToVal(message3,val3);
            ok:= StrToVal(message4,val4);
            ok:= StrToVal(message5,val5);
            ok:= StrToVal(message6,val6);
            ok:= StrToVal(message7,val7);
            
            
            end_location := CRobT(\Tool:=tool0 \WObj:=wobj0);
            current_joints := CalcJointT(end_location,tool0\WObj:=wobj0);

            
           
            i:=i+1;
            
            IF i = 1 THEN
            all_targets{i}:=[[current_joints.robax.rax_1+val1,current_joints.robax.rax_2+val2,current_joints.robax.rax_3+val3,
                        current_joints.robax.rax_4+val4,current_joints.robax.rax_5+val5,current_joints.robax.rax_6 +val6],
                        [current_joints.extax.eax_a + val7,9E+9,9E+9,9E+9,9E+9,9E+9]];
            ENDIF
            
            IF i <> 1 THEN
            all_targets{i}:=[[all_targets{i-1}.robax.rax_1+val1,all_targets{i-1}.robax.rax_2+val2,all_targets{i-1}.robax.rax_3+val3,
                        all_targets{i-1}.robax.rax_4+val4,all_targets{i-1}.robax.rax_5+val5,all_targets{i-1}.robax.rax_6 +val6],
                        [all_targets{i-1}.extax.eax_a + val7,9E+9,9E+9,9E+9,9E+9,9E+9]];
            ENDIF
            
            
            end_location := CRobT(\Tool:=tool0 \WObj:=wobj0);
            current_joints := CalcJointT(end_location,tool0\WObj:=wobj0);
            
            SocketSend client,\Str:=ValToStr(end_location.trans);
            StopMoveReset;
            
        
        ENDWHILE
        
        execute_all:
        FOR j FROM 1 TO 10 DO
            MoveAbsJ all_targets{j}, v50, z10, tool0 \WObj:=wobj0;
        ENDFOR
        
        !jointpos1 := CalcJointT(Target_10, tool0 \WObj:=wobj0);
        !MoveAbsJ jointpos1, v50, z10, tool0 \WObj:=wobj0;
        
        SocketClose Server;

    ENDPROC
    
    PROC Learning_Right_Hand()
        !MoveL Target_10,v500,z100,tool0\WObj:=wobj0;
        !MoveL Target_20,v500,z100,tool0\WObj:=wobj0;
        VAR socketdev server;
        VAR socketdev client;
        
        VAR string message1;
        VAR string message2;
        VAR string message3;
        VAR string message4;
        VAR string message5;
        VAR string message6;
        VAR string message7;
        
        VAR bool ok;
        
        VAR num val1;
        VAR num val2;
        VAR num val3;
        VAR num val4;
        VAR num val5;
        VAR num val6;
        VAR num val7;
        
        VAR rawbytes data;
        VAR robtarget end_location;
        
        current_joints :=CalcJointT(Target_10, tool0 \WObj:=wobj0);
        MoveAbsJ current_joints, v50, z10, tool0 \WObj:=wobj0;
         
        !current_joints2 :=CalcJointT(Target_20, tool0 \WObj:=wobj0);
        !MoveAbsJ current_joints2, v50, z10, tool0 \WObj:=wobj0;         
        
        !current_joints :=CalcJointT(Target_10, tool0 \WObj:=wobj0);
        !MoveAbsJ current_joints, v50, z10, tool0 \WObj:=wobj0;
        
        SocketCreate server;
        !SocketBind server,"192.168.125.1",44000;
        SocketBind server,"127.0.0.1",44000;
        SocketListen server;
        begin_again:
        
        
        ConfJ \Off;
        SocketAccept server,client;
        SocketSend client,\Str:="Hello Client!";
        
         WHILE SocketGetStatus(client) <> SOCKET_CLOSED DO
           
            !Receive a message from client
            SocketReceive client,\Str:=message1;
            SocketSend client,\Str:="Confirmation from Left H";
            
            ok:= StrToVal(message1,val1);
            
            IF val1 = 3333 THEN
                jointpos1 := CalcJointT(Target_10, tool0 \WObj:=wobj0);
                MoveAbsJ jointpos1, v50, z10, tool0 \WObj:=wobj0;
                SocketClose client;
                GOTO begin_again;
            ENDIF
            
            IF val1 = 9999 OR val1=3333 THEN
                jointpos1 := CalcJointT(Target_10, tool0 \WObj:=wobj0);
                !MoveAbsJ jointpos1, v50, z10, tool0 \WObj:=wobj0;
                SocketClose client;
                GOTO begin_again;
            ENDIF
            
            SocketReceive client,\Str:=message2;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message3;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message4;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message5;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message6;
            SocketSend client,\Str:="Confirmation from Left H";
            SocketReceive client,\Str:=message7;
            SocketSend client,\Str:="Confirmation from Left H";
            
            ok:= StrToVal(message1,val1);
            ok:= StrToVal(message2,val2);
            ok:= StrToVal(message3,val3);
            ok:= StrToVal(message4,val4);
            ok:= StrToVal(message5,val5);
            ok:= StrToVal(message6,val6);
            ok:= StrToVal(message7,val7);
            
            !another_target:=[[val1,val2,val3],[1,0,0,0],[-1,0,-2,4],[101.964427132,9E+09,9E+09,9E+09,9E+09,9E+09]];
            
            jointpos1 := CalcJointT(Target_10, tool0 \WObj:=wobj0);
            !jointpos2 := CalcJointT(Target_20, tool0 \WObj:=wobj0);
            
            end_location := CRobT(\Tool:=tool0 \WObj:=wobj0);
            current_joints := CalcJointT(end_location,tool0\WObj:=wobj0);

            
            jointpos1:=[[current_joints.robax.rax_1+val1,current_joints.robax.rax_2+val2,current_joints.robax.rax_3+val3,
                        current_joints.robax.rax_4+val4,current_joints.robax.rax_5+val5,current_joints.robax.rax_6 +val6],
                        [current_joints.extax.eax_a+val7 ,9E+9,9E+9,9E+9,9E+9,9E+9]];

            !jointpos1:=[[val1,val2,val3,val4,val5,val6],[val7,9E+9,9E+9,9E+9,9E+9,9E+9]];
            !jointpos2:=[[-110.08,-128.668,51.0821,-3.07672,56.8406,-159.638],[50.8102,9E+9,9E+9,9E+9,9E+9,9E+9]];
            
        
            MoveAbsJ jointpos1, v50, z10, tool0 \WObj:=wobj0;
            !MoveAbsJ jointpos2, v50, z10, tool0 \WObj:=wobj0;
            
            end_location := CRobT(\Tool:=tool0 \WObj:=wobj0);
            current_joints := CalcJointT(end_location,tool0\WObj:=wobj0);
            
            SocketSend client,\Str:=ValToStr(end_location.trans);
            StopMoveReset;
            
        
        ENDWHILE
        SocketClose Server;

        !jointpos1 := CalcJointT(Target_10, tool0 \WObj:=wobj0);
        !jointpos2 := CalcJointT(Target_20, tool0 \WObj:=wobj0);
        
        !MoveAbsJ jointpos1, v50, z10, tool0 \WObj:=wobj0;
        !MoveAbsJ jointpos2, v50, z10, tool0 \WObj:=wobj0;
    
    ENDPROC
ENDMODULE